name: CI / Build & Package

on:
  push:
    branches: [ "main" ]

env:
  IMAGE_NAME: my-django-app
  CHART_DIR: my-django-chart
  CHART_PACKAGE_DIR: charts-output

jobs:
  build-and-publish:
    name: Build & Publish Docker image + Package Helm chart
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.TOKEN }}

    - name: Build and push Docker image
      id: build-image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:${{ github.sha }}
          ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:latest

    - name: Install Helm
      uses: azure/setup-helm@v3

    - name: Package Helm chart
      id: package_chart
      run: |
        mkdir -p ${{ env.CHART_PACKAGE_DIR }}
        helm package "${{ env.CHART_DIR }}" --destination "${{ env.CHART_PACKAGE_DIR }}"
        PACKAGE=$(ls ${{ env.CHART_PACKAGE_DIR }}/*.tgz | head -n 1)
        echo "chart_path=$PACKAGE" >> $GITHUB_OUTPUT

    - name: Upload packaged chart as artifact
      uses: actions/upload-artifact@v4
      with:
        name: packaged-chart
        path: ${{ env.CHART_PACKAGE_DIR }}

    - name: Create GitHub Release (optional)
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "chart-${{ github.sha }}"
        name: "Packaged chart for ${{ github.sha }}"
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}

    - name: Upload chart to release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.package_chart.outputs.chart_path }}
        asset_name: $(basename ${{ steps.package_chart.outputs.chart_path }})
        asset_content_type: application/gzip
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}

